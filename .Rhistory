lat.range = lat.range,
lon.range = lon.range,
data.dir = data.dir)
# script to plot data from NOAA stations, based on http://blue.for.msu.edu/lab-notes/NOAA_0.1-1/NOAA-ws-data.pdf
rm(list = ls())
import.noaa.data <- FALSE
## USER INPUTS ----
# set code directory
code.dir = "~/Documents/projects/Rcode/SurfaceStationSummary"
# Set data directory
data.dir = "~/Documents/projects/Rcode/SurfaceStationSummary/Test/SW"
# define configuration file directory and name
config.dir <- code.dir
config.file = "SWSurfaceStations.R"
# END OF USER INPUTS
## GET STARTED ----
#setwd(data.dir)
source(file.path(config.dir,config.file))
## LIBRARIES ----
source(file.path(code.dir,"scripts","LoadPackages.R"))
## DIRECTORIES ----
source(file.path(code.dir,"scripts","PrepDirectories.R"))
## SOURCE FUNCTIONS WE WILL USE ----
source(file.path(code.dir,"scripts","SourceFunctions.R"))
## Go looking for stations ----
FindStations(country.code = country.code,
year.range = year.range,
lat.range = lat.range,
lon.range = lon.range,
data.dir = data.dir)
rm(list = ls())
?rm
rm(list = ls())
rm(list = ls())
import.noaa.data <- FALSE
## USER INPUTS ----
# set code directory
code.dir = "~/Documents/projects/Rcode/SurfaceStationSummary"
# Set data directory
data.dir = "~/Documents/projects/Rcode/SurfaceStationSummary/Test/SW"
# define configuration file directory and name
config.dir <- code.dir
config.file = "SWSurfaceStations.R"
# END OF USER INPUTS
## GET STARTED ----
#setwd(data.dir)
source(file.path(config.dir,config.file))
## LIBRARIES ----
source(file.path(code.dir,"scripts","LoadPackages.R"))
## DIRECTORIES ----
source(file.path(code.dir,"scripts","PrepDirectories.R"))
## SOURCE FUNCTIONS WE WILL USE ----
source(file.path(code.dir,"scripts","SourceFunctions.R"))
## Go looking for stations ----
FindStations(country.code = country.code,
year.range = year.range,
lat.range = lat.range,
lon.range = lon.range,
data.dir = data.dir)
target.list <- FindStations(country.code = country.code,
year.range = year.range,
lat.range = lat.range,
lon.range = lon.range,
data.dir = data.dir)
stations.all <- FindStations(country.code = country.code,
year.range = year.range,
lat.range = lat.range,
lon.range = lon.range,
data.dir = data.dir)
NULL < 3
source(file.path(code.dir,"functions","RequestStationDataFiles.R"))
source(file.path(code.dir,"functions","RequestStationDataFiles.R"))
source(file.path(code.dir,"functions","RequestStationDataFiles.R"))
RequestStationDataFiles(station.list = station.list,
year.range = year.range)
RequestStationDataFiles(station.list = stations.all,
year.range = year.range)
source(file.path(code.dir,"functions","RequestStationDataFiles.R"))
RequestStationDataFiles(station.list = stations.all,
year.range = year.range)
year.range <- c(as.Date("2008-01-01"),as.Date("2010-12-31"))
RequestStationDataFiles(station.list = stations.all,
year.range = year.range)
stations.all
stations.all <- FindStations(country.code = country.code,
year.range = year.range,
lat.range = lat.range,
lon.range = lon.range,
data.dir = data.dir)
stations.all
RequestStationDataFiles(station.list = stations.all,
year.range = year.range)
data.dir
source(file.path(code.dir,"functions","RequestStationDataFiles.R"))
RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir)
data.dir
?file.exists
source(file.path(code.dir,"functions","RequestStationDataFiles.R"))
source(file.path(code.dir,"functions","RequestStationDataFiles.R"))
RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir)
RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir,
debug = 1)
source(file.path(code.dir,"functions","RequestStationDataFiles.R"))
RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir,
debug = 1)
year.range <- c(as.Date("2010-01-01"),as.Date("2012-12-31"))
RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir,
debug = 1)
RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir,
debug = 1)
RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir,
debug = 1)
data.dir
source(file.path(code.dir,"functions","ConvertStationDataFiles.R"))
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/ConvertStationDataFiles.R')
RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir,
debug = 1)
source('~/Documents/projects/Rcode/SurfaceStationSummary/SWSurfaceStations.R')
rm(list = ls())
import.noaa.data <- FALSE
import.noaa.data <- TRUE
# set code directory
code.dir = "~/Documents/projects/Rcode/SurfaceStationSummary"
# Set data directory
data.dir = "~/Documents/projects/Rcode/SurfaceStationSummary/Test/BW"
# define configuration file directory and name
config.dir <- code.dir
config.file = "SWSurfaceStations.R"
source(file.path(config.dir,config.file))
## LIBRARIES ----
source(file.path(code.dir,"scripts","LoadPackages.R"))
## DIRECTORIES ----
source(file.path(code.dir,"scripts","PrepDirectories.R"))
## SOURCE FUNCTIONS WE WILL USE ----
source(file.path(code.dir,"scripts","SourceFunctions.R"))
stations.all <- FindStations(country.code = country.code,
year.range = year.range,
lat.range = lat.range,
lon.range = lon.range,
data.dir = data.dir)
fix(country.code)
# script to plot data from NOAA stations, based on http://blue.for.msu.edu/lab-notes/NOAA_0.1-1/NOAA-ws-data.pdf
rm(list = ls())
import.noaa.data <- FALSE
## USER INPUTS ----
# set code directory
code.dir = "~/Documents/projects/Rcode/SurfaceStationSummary"
# Set data directory
data.dir = "~/Documents/projects/Rcode/SurfaceStationSummary/Test/Maine"
# define configuration file directory and name
config.dir <- code.dir
config.file = "MaineSurfaceStations.R"
# END OF USER INPUTS
## GET STARTED ----
source(file.path(config.dir,config.file))
## LIBRARIES ----
source(file.path(code.dir,"scripts","LoadPackages.R"))
## DIRECTORIES ----
source(file.path(code.dir,"scripts","PrepDirectories.R"))
setwd(data.dir)
## SOURCE FUNCTIONS WE WILL USE ----
source(file.path(code.dir,"scripts","SourceFunctions.R"))
## Go looking for stations ----
# see if we are importing data or not
if (import.noaa.data == TRUE){
stations.all <- FindStations(country.code = country.code,
year.range = year.range,
lat.range = lat.range,
long.range = long.range,
data.dir = data.dir)
# save the station files to file
write.csv(stations.all,
file = file.path(data.dir,
"data",
"stationlist.csv"),
row.names = FALSE)
# request files for these stations from the NOAA database
station.files <- RequestStationDataFiles(station.list = stations.all,
year.range = year.range,
data.dir = data.dir,
debug = 0)
# save the station files to file
write.csv(station.files,
file = file.path(data.dir,
"data",
"stationfiles.csv"),
row.names = FALSE)
# convert the data to csv
ConvertStationDataFiles(station.files = station.files,
data.dir = data.dir,
debug = 0)
# load the data from those stations
obs.all <- LoadStationData(stations.all = stations.all,
station.files = station.files,
data.dir = data.dir)
save(stations.all,
station.files,
obs.all,
file = file.path(data.dir,
"data",
"AllObservations.Rdata"))
}else{
load(file = file.path(data.dir,
"data",
"AllObservations.Rdata"))
}
# create a LaTeX table for reference
WriteStationInformation(stations.all,
data.dir,
country.code)
PlotDataCountsByTimeInterval(GetDataCountsByTimeInterval(obs.all,
interval = "year"),
interval = "year")
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range)
station.map <- MapStations(base.map = base.map,
stations = stations.all,
labels = TRUE)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/MapDataCountsByTimeInterval.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/MapDataCountsByTimeInterval.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/.active-rstudio-document')
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
?aes_string
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
?ggplot
source('~/.active-rstudio-document')
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
?base_layer
?ggmap
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
source('~/.active-rstudio-document')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
stations.all
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range
data.in = stations.all)
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = stations.all)
?ggplot
?aes_string
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = stations.all)
dtable(stations.all)
dput(stations.all)
dput(stations.all[1:,3])
dput(stations.all[1:3,])
stations.all
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = stations.all)
source('~/.active-rstudio-document')
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = stations.all)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = stations.all)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = stations.all)
source('~/.active-rstudio-document')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = stations.all)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = stations.all)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
test.data
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
base.map <- ggmap(get_map(location = c(min(long.range),
min(lat.range),
max(long.range),
max(lat.range)),
source = "osm"),
base_layer = ggplot(aes_string(x = "LONG",
y = "LAT"),
data = data.in))
base.map <- ggmap(get_map(location = c(min(long.range),
min(lat.range),
max(long.range),
max(lat.range)),
source = "osm"),
base_layer = ggplot(aes_string(x = "LONG",
y = "LAT"),
data = test.data))
base.map <- ggmap(get_map(location = c(min(long.range),
min(lat.range),
max(long.range),
max(lat.range)),
source = "osm"),
base_layer = ggplot(aes_string(x = "LONG",
y = "LAT"),
data = test.data))
print(base.map)
base.map <- ggmap(get_map(location = c(min(long.range),
min(lat.range),
max(long.range),
max(lat.range)),
source = "osm"),
base_layer = ggplot(aes_string(x = "LONG",
y = "LAT"),
data = test.data)) +
geom_point()
print(base.map)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/.active-rstudio-document')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
?environment
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = "test.data")
source('~/.active-rstudio-document')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = "test.data")
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = "test.data")
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/.active-rstudio-document')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/.active-rstudio-document')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
install.packages(c("class", "evaluate", "formatR", "labeling", "maptools", "markdown", "MASS", "nnet", "R.methodsS3", "R.oo", "raster", "rgdal", "sp", "spatial", "zoo"))
install.packages(c("class", "evaluate", "formatR", "labeling",
))
install.packages(c("class", "evaluate", "formatR", "labeling", "maptools", "markdown", "MASS", "nnet", "R.methodsS3", "R.oo", "raster", "rgdal", "sp", "spatial", "zoo"))
install.packages(c("class", "evaluate", "formatR", "labeling",
install.packages(c("maptools", "rgdal", "zoo"))
install.packages(c("maptools", "rgdal", "zoo"))
install.packages(c("raster", "spatial"))
install.packages(c("R.methodsS3", "R.oo"))
install.packages(c("class", "evaluate"))
install.packages("nnet")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/CreateBaseMap.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
source('~/.active-rstudio-document')
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/MapDataCountsByTimeInterval.R')
base.map <- CreateBaseMap(lat.range = lat.range,
long.range = long.range,
data.in = test.data)
MapDataCountsByTimeInterval(obs.all,
stations.all,
interval = "overall",
lat.range,
long.range)
source('~/Documents/projects/Rcode/SurfaceStationSummary/functions/MapDataCountsByTimeInterval.R')
install.packages(c("labeling", "markdown", "MASS"))
install.packages(c("labeling", "markdown", "MASS"))
install.packages(c("labeling", "markdown", "MASS"))
install.packages(c("labeling", "markdown", "MASS"))
install.packages(c("labeling", "markdown", "MASS"))
install.packages(c("labeling"))
install.packages(c("labeling"))
install.packages(c("labeling"))
install.packages("markdown")
install.packages("formatR")
install.packages("MASS")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("ggmap")
install.packages("ggmap")
install.packages("ggmap")
